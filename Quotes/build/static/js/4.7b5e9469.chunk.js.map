{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","HighlightedQuote","props","quote","text","author","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","lenght","onClick","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","url"],"mappings":"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","file":"static/js/4.7b5e9469.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.lenght === 0)\n  ) {\n    comments = <p className=\"centered\">No comments where added yet</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}